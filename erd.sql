CREATE TABLE USERS (
	username	INTEGER,
	password	INTEGER,
	id	INTEGER	NOT NULL,
PRIMARY KEY (id) );

CREATE TABLE MOVIES (
	title	INTEGER,
	score	INTEGER,
	genre_bitmap	INTEGER,
	poster_url	INTEGER,
	id	INTEGER	NOT NULL,
	FK1_id	INTEGER	NOT NULL,
PRIMARY KEY (id) );

CREATE TABLE ADMIN (
	id	INTEGER	NOT NULL,
PRIMARY KEY (id) );

CREATE TABLE NON_ADMIN (
	id	INTEGER	NOT NULL,
PRIMARY KEY (id) );

CREATE TABLE STORES (
	phone_num	INTEGER,
	city	INTEGER,
	address	INTEGER,
	id	INTEGER	NOT NULL,
	FK1_id	INTEGER	NOT NULL,
PRIMARY KEY (id) );

CREATE TABLE OWNS (
	status	INTEGER,
	added_at	INTEGER,
	FK1_id	INTEGER	NOT NULL,
	FK2_id	INTEGER	NOT NULL,
PRIMARY KEY (FK1_id, FK2_id) );

CREATE TABLE REVIEWS (
	review_id	INTEGER	NOT NULL,
	rating	INTEGER,
	comment	INTEGER,
	timestamp	INTEGER,
	FK1_id	INTEGER	NOT NULL,
	FK2_id	INTEGER	NOT NULL,
PRIMARY KEY (FK1_id, FK2_id),
UNIQUE(review_id) );

ALTER TABLE MOVIES ADD FOREIGN KEY (FK1_id) REFERENCES ADMIN (id) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE ADMIN ADD FOREIGN KEY (id) REFERENCES USERS (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE NON_ADMIN ADD FOREIGN KEY (id) REFERENCES USERS (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE STORES ADD FOREIGN KEY (FK1_id) REFERENCES ADMIN (id) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE OWNS ADD FOREIGN KEY (FK1_id) REFERENCES USERS (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE OWNS ADD FOREIGN KEY (FK2_id) REFERENCES MOVIES (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE REVIEWS ADD FOREIGN KEY (FK1_id) REFERENCES USERS (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE REVIEWS ADD FOREIGN KEY (FK2_id) REFERENCES MOVIES (id) ON DELETE CASCADE ON UPDATE CASCADE;

